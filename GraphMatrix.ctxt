#BlueJ class context
comment0.params=maximaleKnoten
comment0.target=GraphMatrix(int)
comment1.params=bez\ x\ y
comment1.target=void\ knotenEinfuegen(java.lang.String,\ int,\ int)
comment10.params=ahneEins\ ahneZwei
comment10.target=void\ kreuzeIndividuen(java.util.LinkedList,\ java.util.LinkedList)
comment11.params=individuum
comment11.target=java.util.LinkedList\ mutiere(java.util.LinkedList)
comment12.params=individuum
comment12.target=void\ ausgabe(java.util.LinkedList)
comment13.params=
comment13.target=int\ minKnoten()
comment14.params=start
comment14.target=void\ initialisiere(java.lang.String)
comment15.params=zielKnoten
comment15.target=void\ streckeAusgeben(Knoten)
comment16.params=start\ ende
comment16.target=void\ kuerzesterWeg(java.lang.String,\ java.lang.String)
comment2.params=
comment2.target=void\ knotenDarstellen()
comment3.params=bez
comment3.target=int\ knotenNummerGeben(java.lang.String)
comment4.params=name
comment4.target=Knoten\ gibKnoten(java.lang.String)
comment5.params=anfang\ ende\ abstand
comment5.target=void\ kanteEinfuegen(java.lang.String,\ java.lang.String,\ int)
comment6.params=
comment6.target=void\ textAusgabe()
comment7.params=chars\ stellen
comment7.target=java.lang.String\ charArrayInString(char[],\ int)
comment8.params=start\ ziel\ generationen
comment8.target=void\ evolutorischeSuche(java.lang.String,\ java.lang.String,\ int)
comment9.params=fitness
comment9.target=void\ sortierePopulation(java.util.LinkedList)
numComments=17
